const jwt = require('jsonwebtoken');

function authorizeRequest(req, res, next) {

    try {
        var requestedUrl = req.protocol + '://' + req.get('Host') + req.url;
        const authorizationHeader = req.headers.authorization;
        const expiresIn = req.headers.expiresin;

        let result;

        if (authorizationHeader) {

            const token = req.headers.authorization.split(' ')[1]; // Bearer <token>

            const options = {
                expiresIn: expiresIn
            };

            try {
                // verify makes sure that the token hasn't expired and has been issued by us
                result = jwt.verify(token, process.env.IGNITE_EDITOR_API_SECRET, options);

                // Let's pass back the decoded token to the request object
                req.decoded = result;

                // We call next to pass execution to the subsequent middleware
                next();
            }
            catch (e) {
                throw `JsonWebTokenError: ${e.message}`;
            }
        } else {
            result = {
                error: `Authentication error. Token required.`,
                status: 401
            };

            console.log("url = " + requestedUrl);
            console.error('Authentication error. Token required.');
            return res.status(401).send(result);
        }

    } catch (e) {
        console.log("url = " + requestedUrl);
        console.error(e);
        result = {
            error: e,
            status: 401
        };
        return res.status(401).send(result);
    }
}

module.exports = {
    authorizeRequest: authorizeRequest
};

